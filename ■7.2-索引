■ 建立索引

   □ 在建立表格的時候建立索引
   
     # 第一種方法 
     
      create table addressbook(
        id    int unsigned primary key,   #  設定主索引鍵
          name  varchar(20),
          email varchar(36) unique key    # 設定唯一索引
      )
      
     # 第二種方法 
     
      create table addressbook(
        id    int unsigned,
        name  varchar(20),
        tel   varchar(20),
        email varchar(36),
        primary key(id),
        unique key (email)
        index(name, tel)      # 設定一般索引
      )

  - 只想要為一個字串型態欄位的部份資料建立索引，或是指定建立的索引資料，是要依照由小到大，還是由大到小排列。
  
      create table addressbook(
        id    int unsigned,
          name  varchar(20),
          email varchar(36),
          primary key(id),
          unique key (email),
          index (address (5) DESC)    # 只有使用address欄位前5個字元製作索引，且遞減排序
      )     

  - 只有「CHAR」、「VARCHAR」、「BINARY」與「VARBINARY」型態的欄位可以指定製作索引的長度。「ASC」或「DESC」可以使用在任何型態的欄位。
  - 如果一個表格使用的儲存引擎是「MEMORY」的話，建立索引的時候還可以額外指定索引使用的「演算法、algorithm」。
  
     - 預設的「HASH」演算法適合用在主索引鍵和唯一索引，這種演算法在搜尋不能重複的資料時，效率會比較好；
       而「BTREE」演算法適合用在可以允許重複資料的一般索引，在搜尋上會比「HASH」有更好的效率。

   □ 在修改表格的時候建立索引
   
     alter table book
     add unique index address(5)    # 一個「ALTER TABLE」敘述只能建立一個索引

   □ 使用「CREATE INDEX」建立索引

     alter table addessbook
     add primary key (id)              # 主索引還是要用alter table來建立
     create unique index email_index   # 唯一跟一般索引可以用create index來建立
     on addressbook (email)     

■ 索引的名稱

  - 在「CREATE TABLE」或是「ALTER TABLE」敘述中建立索引的話，你可以為建立的索引取一個名稱。
  - 使用「CREATE INDEX」建立索引的時候，就一定要指定一個索引名稱。
  - 如果使用上列的語法建立索引時沒有指定索引名稱，MySQL會幫你取一個，索引的名稱就是欄位名稱，如果是多個欄位的索引，
    就會使用第一個欄位當作索引名稱。

■ 刪除索引

 - 第一種方法
 
    alter table addessbook
    drop primary key,
    drop index email,
    drop index name,
    drop index address

- 第二種方法，只能一次刪一個索引

    drop index "primary" on addressbook
    drop index email on addressbook

■ 數值欄位型態與AUTO_INCREMENT

  - 若有「編流水號」的需求，可以選擇整數型態的欄位後，再使用「AUTO_INCREMENT」欄位屬性。
	create table meeting(
	  id int unsigned not null auto_increment,
	  title varchar(36),
	  primary key(id)
	  )

  - 接著要新增參加這次開會的員工資料到「participate」表格時，你需要用到MySQL剛才會為你在「meeting」表格中自動編製的流水號，
    這樣的需求可以使用「LAST_INSERT_ID()」函式來取得
    	insert into participate (id, empno)
	values (last_insert_id(), 7499),
	       (last_insert_id(), 7521),
	       (last_insert_id(), 7654)

  - 新增資料時，要讓MySQL為你自動編製一個流水號，並儲存到紀錄中的方式有下列幾種。
  	insert into meeting (id, title)
	values(0, "manger meeting")

	insert into meeting (id, title)
	values(null, "clerk meeting")

  - 如果你需要編製的流水號範圍是非常大的，你應該選擇「AUTO_INCREMENT」欄位的型態為「BIGINT」；MySQL另外提供一個「SERIAL」關鍵字。
  
  	欄位名稱 bigint unsigned not null auto_increment unique
    欄位名稱 srial     # 用srial就可以
  
  - 「AUTO_INCREMENT」欄位屬性有下列幾個重點：
  
    1. 一個表格只能有一個「AUTO_INCREMENT」欄位，而且要為它建立一個索引(通常是主索引或唯一索引)
    2. 只有整數型態才可以使用，因為只會使用到正數，所以你可以加入「UNSIGNED」來增加編號的範圍。
    3. 如果編號已經到欄位型態的最大範圍，再新增就會出錯。
  
■ 查詢表格與索引資訊

   □ 表格相關資訊
    
     show tables from world like  "%y"  # 想要知道一個資料庫有哪一些表格
  
     - MySQL資料庫在啟動以後，會有一個很特別的資料庫，名稱是「information_schema」，這個資料庫通常會稱為「系統資訊資料庫」。
       這個資料庫中有一個表格叫作「TABLES」，它儲存所有MySQL資料庫中的表格相關資訊。
      
     # 查詢表格詳細資訊
     
      select table_schema, table_name, engine, table_rows,
             auto_increment, table_collation
      from information_schema.tables
      where table_schema = "world"  
      
     # 查詢一個表格的定義  
     
      describe world.country
      desc world.country
      show columns from world.country
      show filelds from world.country  
  
    # 查詢建立表格的「CREATE TABLE」敘述
    
      show create table world.country
  
   □ 索引相關資訊
   
    show index from addressbook    # 查詢一個表格的索引詳細資訊
  
參考來源：MySQL 超新手入門（9）表格與索引
http://www.codedata.com.tw/database/mysql-tutorial-9-table-index/
